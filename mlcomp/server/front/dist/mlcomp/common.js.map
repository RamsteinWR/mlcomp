{"version":3,"sources":["webpack:///./src/app/dag/dag-detail/code/code.component.html","webpack:///./src/app/dag/dag-detail/dag-detail/dag-detail.component.html","webpack:///./src/app/dag/dag-detail/graph/graph.component.css","webpack:///./src/app/dag/dag-detail/graph/graph.component.html","webpack:///./src/app/task/task-detail/task-detail/task-detail.component.ts","webpack:///./src/app/task/task-detail/step/step.component.ts","webpack:///./src/app/task/task-detail/task-detail-routing.module.ts","webpack:///./src/app/task/task-detail/task-detail.module.ts","webpack:///./src/app/dag/dag-detail/code/code.component.css","webpack:///./src/app/task/task-detail/task-detail/task-detail.component.css","webpack:///./src/app/task/task-detail/step/step.component.html","webpack:///./src/app/dag/dag-detail/config/config.component.html","webpack:///./src/app/dag/dag-detail/tasks/tasks.component.html","webpack:///./src/app/dag-detail.service.ts","webpack:///./src/app/dag/dag-detail/code/code.component.ts","webpack:///./src/app/dag/dag-detail/config/config.component.ts","webpack:///./src/app/dag/dag-detail/graph/graph.component.ts","webpack:///./src/app/dag/dag-detail/dag-detail/dag-detail.component.ts","webpack:///./src/app/dag/dag-detail/tasks/tasks.component.ts","webpack:///./src/app/dag/dag-detail/dag-detail-routing.module.ts","webpack:///./src/app/dag/dag-detail/dag-detail.module.ts","webpack:///./src/app/task/task-detail/task-detail/task-detail.component.html","webpack:///./src/app/task/task-detail/step/step.component.css","webpack:///./src/app/dag/dag-detail/tasks/tasks.component.css","webpack:///./src/app/dag/dag-detail/config/config.component.css","webpack:///./src/app/dag/dag-detail/dag-detail/dag-detail.component.css"],"names":["module","exports","task_detail_component_TaskDetailComponent","TaskDetailComponent","prototype","ngOnInit","tslib_es6","Object","core","selector","template","__webpack_require__","step_component_StepComponent","StepComponent","service","location","router","route","iconRegistry","sanitizer","message_service","this","transformer","node","level","expandable","children","length","name","content","treeControl","esm5_tree_es5","treeFlattener","tree_es5","dataSource","hasChild","_","self","step_id","parseInt","parent","snapshot","paramMap","get","steps","subscribe","res","data","expandAll","node_click","status_color","status","TypeError","color_for_log_status","count","app_settings","log_colors","status_click","init_level","task_service","common","fesm5_router","icon_es5","platform_browser","app_message_service","routes","path","component","log_component","reports_component","task_detail_routing_module_TaskDetailRoutingModule","TaskDetailRoutingModule","imports","forChild","task_detail_module_TaskDetailModule","TaskDetailModule","shared_module","declarations","dag_detail_service_DagDetailService","_super","DagDetailService","_this","apply","arguments","url","API_ENDPOINT","get_config","dag_id","http","post","pipe","tap","log","catchError","handleError","models","get_code","get_graph","providedIn","code_component_CodeComponent","CodeComponent","resource_service","load","prettify_lang","ext","pre","document","createElement","textContent","indexOf","split","toLowerCase","className","code_holder","getElementById","innerHTML","appendChild","window","prettyPrint","dynamicresource_service","config_component_ConfigComponent","ConfigComponent","then","graph_component_GraphComponent","GraphComponent","load_network","nodes","forEach","obj","color","status_colors","edges","vis","DataSet","container","Network","layout","hierarchical","direction","sortMethod","arrows","on","properties","ids","clickedNodes","navigate","id","catch","err","add","dag_detail_component_DagDetailComponent","DagDetailComponent","tasks_component_TasksHostComponent","TasksHostComponent","dag","dag_detail_routing_module_DagDetailRoutingModule","DagDetailRoutingModule","dag_detail_module_DagDetailModule","DagDetailModule"],"mappings":"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","file":"common.js","sourcesContent":["module.exports = \"<link href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" rel=\\\"stylesheet\\\">\\n\\n<table style=\\\"width: 70%;\\\">\\n  <td class=\\\"mat-app-background basic-container\\\" style=\\\"width: 30%\\\">\\n  <mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n    <!-- This is the tree node template for leaf nodes -->\\n    <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\n      <!-- use a disabled button to provide padding for tree leaf -->\\n      <button mat-icon-button mat-button class=\\\"mat-icon-button\\\" (click)=\\\"node_click(node)\\\"></button>\\n      {{node.name}}\\n    </mat-tree-node>\\n     This is the tree node template for expandable nodes\\n    <mat-tree-node *matTreeNodeDef=\\\"let node;when: hasChild\\\" matTreeNodePadding>\\n      <button mat-icon-button matTreeNodeToggle\\n              [attr.aria-label]=\\\"'toggle ' + node.name\\\" class=\\\"mat-icon-button\\\">\\n        <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n        </mat-icon>\\n      </button>\\n      {{node.name}}\\n     </mat-tree-node>\\n    </mat-tree>\\n  </td>\\n\\n  <td style=\\\"width: 70%\\\">\\n    <div id=\\\"codeholder\\\">\\n\\n    </div>\\n\\n  </td>\\n</table>\\n\"","module.exports = \"<nav>\\n  <a routerLink=\\\"./\\\" routerLinkActive=\\\"active\\\">Tasks</a>\\n  <a routerLink=\\\"./config\\\" routerLinkActive=\\\"active\\\">Config</a>\\n  <a routerLink=\\\"./code\\\" routerLinkActive=\\\"active\\\">Code</a>\\n  <a routerLink=\\\"./graph\\\" routerLinkActive=\\\"active\\\">Graph</a>\\n</nav>\\n\\n<router-outlet></router-outlet>\"","module.exports = \"#mynetwork {\\n    border: 1px solid black;\\n    background: white;\\n    display: inline-block;\\n    width: 100%;\\n    height: 800px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAvZGFnL2RhZy1kZXRhaWwvZ3JhcGgvZ3JhcGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtJQUN2QixpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxhQUFhO0FBQ2pCIiwiZmlsZSI6Ii4uL3NyYy9hcHAvZGFnL2RhZy1kZXRhaWwvZ3JhcGgvZ3JhcGguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNteW5ldHdvcmsge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDgwMHB4O1xufSJdfQ== */\"","module.exports = \"<div id=\\\"mynetwork\\\"></div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.component.html',\n  styleUrls: ['./task-detail.component.css']\n})\nexport class TaskDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Location} from \"@angular/common\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatIconRegistry, MatTreeFlatDataSource, MatTreeFlattener} from \"@angular/material\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MessageService} from \"../../../message.service\";\nimport {StepNode, FlatNode} from \"../../../models\";\nimport {FlatTreeControl} from \"@angular/cdk/tree\";\nimport {TaskService} from \"../../../task.service\";\nimport {AppSettings} from \"../../../app-settings\";\n\n@Component({\n  selector: 'app-step',\n  templateUrl: './step.component.html',\n  styleUrls: ['./step.component.css']\n})\nexport class StepComponent implements OnInit {\n  private step_id: number;\n\n constructor(protected service: TaskService, protected location: Location,\n                private router: Router, private  route: ActivatedRoute,\n                iconRegistry: MatIconRegistry, sanitizer: DomSanitizer,\n                private message_service: MessageService\n    ){}\n\n  private transformer = (node: StepNode, level: number) => {\n        return {\n            expandable: !!node.children && node.children.length > 0,\n            name: node.name,\n            level: level,\n            content: node\n        };\n    };\n\n    treeControl = new FlatTreeControl<FlatNode>(\n        node => node.level, node => node.expandable);\n\n    treeFlattener = new MatTreeFlattener(\n        this.transformer, node => node.level, node => node.expandable, node => node.children);\n\n    dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    ngOnInit() {\n        let self = this;\n        this.step_id = parseInt(this.route.parent.snapshot.paramMap.get('id'));\n        this.service.steps(this.step_id).subscribe(res => {\n            self.dataSource.data = res;\n            self.treeControl.expandAll();\n        });\n    }\n\n\n    node_click(node: FlatNode) {\n       \n    }\n\n    hasChild = (_: number, node: FlatNode) => node.expandable;\n\n  status_color(status: string) {\n    switch (status) {\n      case 'in_progress':\n        return 'green';\n      case 'failed':\n        return 'red';\n      case 'stopped':\n        return 'orange';\n      case 'successed':\n        return 'green';\n      default:\n        throw new TypeError(\"unknown status: \"+status)\n    }\n\n  }\n\n  color_for_log_status(name: string, count: number) {\n      return count > 0 ? AppSettings.log_colors[name] : 'gainsboro'\n  }\n\n  status_click(node: any, status: string) {\n     node.content.init_level = status;\n  }\n}\n\n\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {TaskDetailComponent} from \"./task-detail/task-detail.component\";\nimport {LogComponent} from \"../../log/log.component\";\nimport {ReportsComponent} from \"../../report/reports/reports.component\";\nimport {StepComponent} from \"./step/step.component\";\n\nconst routes: Routes = [\n    {\n\n        path: '',\n        component: TaskDetailComponent,\n        children: [\n            {path: 'log', component: LogComponent},\n            {path: 'step', component: StepComponent},\n            {path: '', component: ReportsComponent}\n        ]\n\n\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class TaskDetailRoutingModule {\n}","import {NgModule} from '@angular/core';\n\nimport {TaskDetailRoutingModule} from './task-detail-routing.module';\nimport {SharedModule} from \"../../shared.module\";\nimport {TaskDetailComponent} from \"./task-detail/task-detail.component\";\nimport { StepComponent } from './step/step.component';\n\n@NgModule({\n    imports: [\n        TaskDetailRoutingModule,\n        SharedModule\n    ],\n    declarations: [\n        TaskDetailComponent,\n        StepComponent\n    ]\n})\nexport class TaskDetailModule {\n}","module.exports = \".mat-tree-node { min-height: 20px }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAvZGFnL2RhZy1kZXRhaWwvY29kZS9jb2RlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGlCQUFpQiIsImZpbGUiOiIuLi9zcmMvYXBwL2RhZy9kYWctZGV0YWlsL2NvZGUvY29kZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10cmVlLW5vZGUgeyBtaW4taGVpZ2h0OiAyMHB4IH0iXX0= */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL3Rhc2svdGFzay1kZXRhaWwvdGFzay1kZXRhaWwvdGFzay1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n    <!-- This is the tree node template for leaf nodes -->\\n    <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\n        <!-- use a disabled button to provide padding for tree leaf -->\\n        <button mat-icon-button mat-button class=\\\"mat-icon-button\\\" (click)=\\\"node_click(node)\\\"></button>\\n\\n        <mat-accordion>\\n            <mat-expansion-panel  (opened)=\\\"node.opened = true\\\" (closed)=\\\"node.opened = false\\\">\\n                <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                        <span [style.margin]=\\\"'auto'\\\">{{node.name}}</span>\\n                    </mat-panel-title>\\n                    <mat-panel-description>\\n                        <span [style.color]=\\\"status_color(node.content.status)\\\" [style.margin]=\\\"'auto'\\\">{{node.content.status}}</span>\\n\\n                        <span style=\\\"padding: 10px\\\">{{node.content.duration}}</span>\\n\\n                        <svg height=\\\"40\\\" width=\\\"220px\\\" style=\\\"display: block;\\\">\\n                            <g matTooltip=\\\"{{status.name}}\\\"\\n                               [attr.transform]=\\\"'translate('+(16+i*30).toString()+','+'20)'\\\"\\n                               *ngFor=\\\"let status of node.content.log_statuses; let i = index\\\">\\n\\n                                <text fill=\\\"black\\\" text-anchor=\\\"middle\\\" vertical-align=\\\"middle\\\"\\n                                      font-size=\\\"10\\\" y=\\\"3\\\">{{status.count > 0 ? status.count : ''}}</text>\\n\\n                                <circle [attr.stroke-width]=\\\"status.count>0?2:1\\\" (click)=\\\"status_click(node, status.name)\\\"\\n                                        [attr.stroke]=\\\"color_for_log_status(status.name, status.count)\\\"\\n                                        fill-opacity=\\\"0\\\" r=\\\"12.5\\\" style=\\\"cursor: pointer; opacity: 1;\\\"></circle>\\n                            </g>\\n\\n                        </svg>\\n\\n                    </mat-panel-description>\\n                </mat-expansion-panel-header>\\n\\n                <app-log *ngIf=\\\"node.opened\\\" [step]=\\\"node.content.id\\\" [init_level]=\\\"node.content.init_level\\\"></app-log>\\n\\n            </mat-expansion-panel>\\n        </mat-accordion>\\n\\n\\n    </mat-tree-node>\\n    This is the tree node template for expandable nodes\\n    <mat-tree-node *matTreeNodeDef=\\\"let node;when: hasChild\\\" matTreeNodePadding>\\n        <button mat-icon-button matTreeNodeToggle\\n                [attr.aria-label]=\\\"'toggle ' + node.name\\\" class=\\\"mat-icon-button\\\">\\n            <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n\\n            </mat-icon>\\n        </button>\\n\\n            <mat-accordion>\\n            <mat-expansion-panel  (opened)=\\\"node.opened = true\\\" (closed)=\\\"node.opened = false\\\">\\n                <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                        <span [style.margin]=\\\"'auto'\\\">{{node.name}}</span>\\n                    </mat-panel-title>\\n                    <mat-panel-description>\\n                        <span [style.color]=\\\"status_color(node.content.status)\\\" [style.margin]=\\\"'auto'\\\">{{node.content.status}}</span>\\n\\n                        <span style=\\\"padding: 10px\\\">{{node.content.duration}}</span>\\n\\n                        <svg height=\\\"40\\\" width=\\\"220px\\\" style=\\\"display: block;\\\">\\n                            <g matTooltip=\\\"{{status.name}}\\\"\\n                               [attr.transform]=\\\"'translate('+(16+i*30).toString()+','+'20)'\\\"\\n                               *ngFor=\\\"let status of node.content.log_statuses; let i = index\\\">\\n\\n                                <text fill=\\\"black\\\" text-anchor=\\\"middle\\\" vertical-align=\\\"middle\\\"\\n                                      font-size=\\\"10\\\" y=\\\"3\\\">{{status.count > 0 ? status.count : ''}}</text>\\n\\n                                <circle [attr.stroke-width]=\\\"status.count>0?2:1\\\" (click)=\\\"status_click(node, status.name)\\\"\\n                                        [attr.stroke]=\\\"color_for_log_status(status.name, status.count)\\\"\\n                                        fill-opacity=\\\"0\\\" r=\\\"12.5\\\" style=\\\"cursor: pointer; opacity: 1;\\\"></circle>\\n                            </g>\\n\\n                        </svg>\\n\\n                    </mat-panel-description>\\n                </mat-expansion-panel-header>\\n\\n                <app-log *ngIf=\\\"node.opened\\\" [step]=\\\"node.content.id\\\" [init_level]=\\\"node.content.init_level\\\"></app-log>\\n\\n            </mat-expansion-panel>\\n        </mat-accordion>\\n\\n    </mat-tree-node>\\n</mat-tree>\"","module.exports = \"<div id=\\\"codeholder\\\">\\n\\n</div>\\n\"","module.exports = \"<app-tasks [dag]=\\\"dag\\\"></app-tasks>\"","import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {AppSettings} from './app-settings'\nimport {CodeNode, Data, Graph} from \"./models\";\nimport {BaseService} from \"./base.service\";\n\n@Injectable({providedIn: 'root'})\nexport class DagDetailService extends BaseService{\n  protected collection_part: string;\n  protected single_part: string;\n  private url = `${AppSettings.API_ENDPOINT}`;\n\n  get_config(dag_id: number): Observable<Data<string>> {\n    return this.http.post<Data<string>>(`${this.url}config`, dag_id)\n      .pipe(\n        tap(_ => this.log('fetched config')),\n        catchError(this.handleError<Data<string>>('config', new Data<string>()))\n      );\n  }\n\n  get_code(dag_id: number): Observable<CodeNode[]> {\n     return this.http.post<CodeNode[]>(`${this.url}code`, dag_id)\n      .pipe(\n        tap(_ => this.log('fetched code')),\n        catchError(this.handleError<CodeNode[]>('config', []))\n      );\n  }\n  get_graph(dag_id: number): Observable<Graph> {\n     return this.http.post<Graph>(`${this.url}graph`, dag_id)\n      .pipe(\n        tap(_ => this.log('fetched graph')),\n        catchError(this.handleError<Graph>('graph', new Graph()))\n      );\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {FlatNode, CodeNode} from '../../../models'\nimport {DagDetailService} from \"../../../dag-detail.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {MessageService} from \"../../../message.service\";\nimport {DynamicresourceService} from \"../../../dynamicresource.service\";\n\n@Component({\n    selector: 'app-code',\n    templateUrl: './code.component.html',\n    styleUrls: ['./code.component.css']\n})\n\nexport class CodeComponent implements OnInit {\n\n    private dag_id: number;\n\n    private transformer = (node: CodeNode, level: number) => {\n        return {\n            expandable: !!node.children && node.children.length > 0,\n            name: node.name,\n            level: level,\n            content: node.content,\n        };\n    };\n\n    treeControl = new FlatTreeControl<FlatNode>(\n        node => node.level, node => node.expandable);\n\n    treeFlattener = new MatTreeFlattener(\n        this.transformer, node => node.level, node => node.expandable, node => node.children);\n\n    dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    constructor(private service: DagDetailService, private route: ActivatedRoute,\n                private message_service: MessageService,\n                private resource_service: DynamicresourceService\n    ) {\n\n    }\n\n    ngOnInit() {\n        let self = this;\n        this.dag_id = parseInt(this.route.parent.snapshot.paramMap.get('id'));\n        this.service.get_code(this.dag_id).subscribe(res => {\n            self.dataSource.data = res;\n        });\n        this.resource_service.load('prettify', 'prettify-yaml', 'prettify-css')\n    }\n\n    prettify_lang(ext: string) {\n        switch (ext) {\n            case 'py':\n                return 'lang-py';\n            case 'yaml':\n            case 'yml':\n                return 'lang-yaml';\n            case 'json':\n                return 'lang-json';\n            default:\n                return ''\n        }\n    }\n\n    node_click(node: FlatNode) {\n        let pre = document.createElement('pre');\n        pre.textContent = node.content;\n        let ext = node.name.indexOf('.')!=-1?node.name.split('.')[1].toLowerCase():'';\n        pre.className = \"prettyprint linenums \" + this.prettify_lang(ext);\n        let code_holder = document.getElementById('codeholder');\n        code_holder.innerHTML = '';\n        code_holder.appendChild(pre);\n\n        window['PR'].prettyPrint();\n    }\n\n    hasChild = (_: number, node: FlatNode) => node.expandable;\n\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {MessageService} from '../../../message.service'\nimport {ActivatedRoute} from \"@angular/router\";\nimport {DagDetailService} from \"../../../dag-detail.service\";\nimport {DynamicresourceService} from \"../../../dynamicresource.service\";\n\n@Component({\n    selector: 'app-config',\n    templateUrl: './config.component.html',\n    styleUrls: ['./config.component.css']\n})\nexport class ConfigComponent implements OnInit {\n    private dag_id: number;\n    config: string;\n\n    constructor(private message_service: MessageService, private route: ActivatedRoute,\n                private service: DagDetailService,\n                private resource_service: DynamicresourceService,\n    ) {\n    }\n\n    ngOnInit() {\n        let self = this;\n        this.dag_id = parseInt(this.route.parent.snapshot.paramMap.get('id'));\n        this.resource_service.load('prettify', 'prettify-yaml', 'prettify-css').then(() => {\n            self.service.get_config(self.dag_id).subscribe(res => {\n                let node = document.createElement('pre');\n                node.textContent = res.data;\n                node.className = \"prettyprint linenums lang-yaml\";\n                document.getElementById('codeholder').appendChild(node);\n                window['PR'].prettyPrint();\n            });\n        })\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {MessageService} from \"../../../message.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {DagDetailService} from \"../../../dag-detail.service\";\nimport {DynamicresourceService} from \"../../../dynamicresource.service\";\nimport {AppSettings} from \"../../../app-settings\";\n\n@Component({\n    selector: 'app-graph',\n    templateUrl: './graph.component.html',\n    styleUrls: ['./graph.component.css']\n})\nexport class GraphComponent implements OnInit {\n\n    private dag_id: number;\n\n    constructor(private message_service: MessageService, private route: ActivatedRoute,\n                private service: DagDetailService,\n                private resource_service: DynamicresourceService,\n                private router: Router\n    ) {\n    }\n\n    ngOnInit() {\n        this.dag_id = parseInt(this.route.parent.snapshot.paramMap.get('id'));\n        this.load_network();\n    }\n\n    private load_network() {\n        let self = this;\n        this.resource_service.load('vis.min.js', 'vis.min.css').then(res => {\n            this.service.get_graph(this.dag_id).subscribe(res => {\n                res.nodes.forEach(obj => obj.color = AppSettings.status_colors[obj.status]);\n                res.edges.forEach(obj => obj.color = AppSettings.status_colors[obj.status]);\n\n                let vis = window['vis'];\n                let nodes = new vis.DataSet(res.nodes);\n                // create an array with edges\n                let edges = new vis.DataSet(res.edges);\n\n                // create a network\n                let container = document.getElementById('mynetwork');\n                let data = {\n                    nodes: nodes,\n                    edges: edges\n                };\n                let options = {\n                    layout: {\n                        hierarchical: {\n                            direction: 'LR',\n                            \"sortMethod\": \"directed\",\n\n                        },\n\n                    },\n\n                    edges: {\n                        arrows: 'to'\n                    }\n                };\n                let network = new vis.Network(container, data, options);\n                network.on('doubleClick', function (properties) {\n                    var ids = properties.nodes;\n                    var clickedNodes = nodes.get(ids);\n                    self.router.navigate(['/task/'+clickedNodes[0].id]);\n                });\n\n            });\n        }).catch(err => this.message_service.add(err));\n\n\n    }\n}\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'app-dag-detail',\n  templateUrl: './dag-detail.component.html',\n  styleUrls: ['./dag-detail.component.css']\n})\nexport class DagDetailComponent implements OnInit {\n\n  ngOnInit() {\n  }\n\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n    selector: 'app-tasks-host',\n    templateUrl: './tasks.component.html',\n    styleUrls: ['./tasks.component.css']\n})\nexport class TasksHostComponent implements OnInit {\n    private dag: number;\n\n    constructor(private route: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n      this.dag = parseInt(this.route.snapshot.paramMap.get('id'));\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {CodeComponent} from './code/code.component';\nimport {ConfigComponent} from './config/config.component';\nimport {GraphComponent} from './graph/graph.component';\nimport {DagDetailComponent} from './dag-detail/dag-detail.component';\nimport {TasksHostComponent} from \"./tasks/tasks.component\";\n\n\nconst routes: Routes = [\n    {\n\n        path: '',\n        component: DagDetailComponent,\n        children: [\n            {path: 'code', component: CodeComponent},\n            {path: 'config', component: ConfigComponent},\n            {path: 'graph', component: GraphComponent},\n            {path: '', component: TasksHostComponent}\n        ]\n\n\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class DagDetailRoutingModule {\n}","import {NgModule} from '@angular/core';\nimport {CodeComponent} from './code/code.component';\nimport {ConfigComponent} from './config/config.component';\nimport {GraphComponent} from './graph/graph.component';\n\nimport {DagDetailRoutingModule} from './dag-detail-routing.module';\nimport { DagDetailComponent } from './dag-detail/dag-detail.component';\nimport {SharedModule} from \"../../shared.module\";\nimport {TasksHostComponent} from \"./tasks/tasks.component\";\n\n@NgModule({\n    imports: [\n        DagDetailRoutingModule,\n        SharedModule\n    ],\n    declarations: [\n        CodeComponent,\n        ConfigComponent,\n        GraphComponent,\n        DagDetailComponent,\n        TasksHostComponent\n    ]\n})\nexport class DagDetailModule {\n}","module.exports = \"<nav>\\n  <a routerLink=\\\"./\\\" routerLinkActive=\\\"active\\\"  [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Reports</a>\\n  <a routerLink=\\\"./step\\\" routerLinkActive=\\\"active\\\">Steps</a>\\n  <a routerLink=\\\"./log\\\" routerLinkActive=\\\"active\\\">Logs</a>\\n</nav>\\n\\n<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL3Rhc2svdGFzay1kZXRhaWwvc3RlcC9zdGVwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2RhZy9kYWctZGV0YWlsL3Rhc2tzL3Rhc2tzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2RhZy9kYWctZGV0YWlsL2NvbmZpZy9jb25maWcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2RhZy9kYWctZGV0YWlsL2RhZy1kZXRhaWwvZGFnLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\""],"sourceRoot":""}