(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"7yFK":function(t,e){t.exports='<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">\n\n<table style="width: 70%;">\n  <td class="mat-app-background basic-container" style="width: 30%">\n  <mat-tree [dataSource]="dataSource" [treeControl]="treeControl">\n    \x3c!-- This is the tree node template for leaf nodes --\x3e\n    <mat-tree-node *matTreeNodeDef="let node" matTreeNodePadding>\n      \x3c!-- use a disabled button to provide padding for tree leaf --\x3e\n      <button mat-icon-button mat-button class="mat-icon-button" (click)="node_click(node)"></button>\n      {{node.name}}\n    </mat-tree-node>\n     This is the tree node template for expandable nodes\n    <mat-tree-node *matTreeNodeDef="let node;when: hasChild" matTreeNodePadding>\n      <button mat-icon-button matTreeNodeToggle\n              [attr.aria-label]="\'toggle \' + node.name" class="mat-icon-button">\n        <mat-icon class="mat-icon-rtl-mirror">\n          {{treeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\'}}\n        </mat-icon>\n      </button>\n      {{node.name}}\n     </mat-tree-node>\n    </mat-tree>\n  </td>\n\n  <td style="width: 70%">\n    <div id="codeholder">\n\n    </div>\n\n  </td>\n</table>\n'},"8kgY":function(t,e){t.exports='<nav>\n  <a routerLink="./" routerLinkActive="active">Tasks</a>\n  <a routerLink="./config" routerLinkActive="active">Config</a>\n  <a routerLink="./code" routerLinkActive="active">Code</a>\n  <a routerLink="./graph" routerLinkActive="active">Graph</a>\n</nav>\n\n<router-outlet></router-outlet>'},B6gx:function(t,e){t.exports="#mynetwork {\n    border: 1px solid black;\n    background: white;\n    display: inline-block;\n    width: 100%;\n    height: 800px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAvZGFnL2RhZy1kZXRhaWwvZ3JhcGgvZ3JhcGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtJQUN2QixpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxhQUFhO0FBQ2pCIiwiZmlsZSI6Ii4uL3NyYy9hcHAvZGFnL2RhZy1kZXRhaWwvZ3JhcGgvZ3JhcGguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNteW5ldHdvcmsge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDgwMHB4O1xufSJdfQ== */"},KkV2:function(t,e){t.exports='<div id="mynetwork"></div>'},LlcR:function(t,e,n){"use strict";n.r(e);var o=n("mrSG"),a=n("CcnG"),i=n("ZYCi"),r=function(){function t(){}return t.prototype.ngOnInit=function(){},t=o.b([Object(a.n)({selector:"app-task-detail",template:n("aTOI"),styles:[n("Q2s5")]}),o.d("design:paramtypes",[])],t)}(),s=n("WpE8"),c=n("dK7+"),p=n("Ip0R"),l=n("J12g"),d=n("SMsm"),u=n("ZYjt"),h=n("OdHV"),m=n("OBdK"),g=n("DK97"),f=n("24n0"),b=function(){function t(t,e,n,o,a,i,r){this.service=t,this.location=e,this.router=n,this.route=o,this.message_service=r,this.transformer=function(t,e){return{expandable:!!t.children&&t.children.length>0,name:t.name,level:e,content:t}},this.treeControl=new m.i(function(t){return t.level},function(t){return t.expandable}),this.treeFlattener=new l.b(this.transformer,function(t){return t.level},function(t){return t.expandable},function(t){return t.children}),this.dataSource=new l.a(this.treeControl,this.treeFlattener),this.hasChild=function(t,e){return e.expandable}}return t.prototype.ngOnInit=function(){var t=this;this.step_id=parseInt(this.route.parent.snapshot.paramMap.get("id")),this.service.steps(this.step_id).subscribe(function(e){t.dataSource.data=e,t.treeControl.expandAll()})},t.prototype.node_click=function(t){},t.prototype.status_color=function(t){switch(t){case"in_progress":return"green";case"failed":return"red";case"stopped":return"orange";case"successed":return"green";default:throw new TypeError("unknown status: "+t)}},t.prototype.color_for_log_status=function(t,e){return e>0?f.a.log_colors[t]:"gainsboro"},t.prototype.status_click=function(t,e){t.content.init_level=e},t=o.b([Object(a.n)({selector:"app-step",template:n("T1WG"),styles:[n("c4K0")]}),o.d("design:paramtypes",[g.a,p.f,i.b,i.a,d.b,u.c,h.a])],t)}(),y=[{path:"",component:r,children:[{path:"log",component:s.a},{path:"step",component:b},{path:"",component:c.a}]}],v=function(){function t(){}return t=o.b([Object(a.L)({imports:[i.c.forChild(y)],exports:[i.c]})],t)}(),I=n("d2mR");n.d(e,"TaskDetailModule",function(){return L});var L=function(){function t(){}return t=o.b([Object(a.L)({imports:[v,I.a],declarations:[r,b]})],t)}()},MPo4:function(t,e){t.exports=".mat-tree-node { min-height: 20px }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAvZGFnL2RhZy1kZXRhaWwvY29kZS9jb2RlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGlCQUFpQiIsImZpbGUiOiIuLi9zcmMvYXBwL2RhZy9kYWctZGV0YWlsL2NvZGUvY29kZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10cmVlLW5vZGUgeyBtaW4taGVpZ2h0OiAyMHB4IH0iXX0= */"},Q2s5:function(t,e){t.exports="\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL3Rhc2svdGFzay1kZXRhaWwvdGFzay1kZXRhaWwvdGFzay1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */"},T1WG:function(t,e){t.exports='<mat-tree [dataSource]="dataSource" [treeControl]="treeControl">\n    \x3c!-- This is the tree node template for leaf nodes --\x3e\n    <mat-tree-node *matTreeNodeDef="let node" matTreeNodePadding>\n        \x3c!-- use a disabled button to provide padding for tree leaf --\x3e\n        <button mat-icon-button mat-button class="mat-icon-button" (click)="node_click(node)"></button>\n\n        <mat-accordion>\n            <mat-expansion-panel  (opened)="node.opened = true" (closed)="node.opened = false">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        <span [style.margin]="\'auto\'">{{node.name}}</span>\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        <span [style.color]="status_color(node.content.status)" [style.margin]="\'auto\'">{{node.content.status}}</span>\n\n                        <span style="padding: 10px">{{node.content.duration}}</span>\n\n                        <svg height="40" width="220px" style="display: block;">\n                            <g matTooltip="{{status.name}}"\n                               [attr.transform]="\'translate(\'+(16+i*30).toString()+\',\'+\'20)\'"\n                               *ngFor="let status of node.content.log_statuses; let i = index">\n\n                                <text fill="black" text-anchor="middle" vertical-align="middle"\n                                      font-size="10" y="3">{{status.count > 0 ? status.count : \'\'}}</text>\n\n                                <circle [attr.stroke-width]="status.count>0?2:1" (click)="status_click(node, status.name)"\n                                        [attr.stroke]="color_for_log_status(status.name, status.count)"\n                                        fill-opacity="0" r="12.5" style="cursor: pointer; opacity: 1;"></circle>\n                            </g>\n\n                        </svg>\n\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n\n                <app-log *ngIf="node.opened" [step]="node.content.id" [init_level]="node.content.init_level"></app-log>\n\n            </mat-expansion-panel>\n        </mat-accordion>\n\n\n    </mat-tree-node>\n    This is the tree node template for expandable nodes\n    <mat-tree-node *matTreeNodeDef="let node;when: hasChild" matTreeNodePadding>\n        <button mat-icon-button matTreeNodeToggle\n                [attr.aria-label]="\'toggle \' + node.name" class="mat-icon-button">\n            <mat-icon class="mat-icon-rtl-mirror">\n\n            </mat-icon>\n        </button>\n\n            <mat-accordion>\n            <mat-expansion-panel  (opened)="node.opened = true" (closed)="node.opened = false">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        <span [style.margin]="\'auto\'">{{node.name}}</span>\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        <span [style.color]="status_color(node.content.status)" [style.margin]="\'auto\'">{{node.content.status}}</span>\n\n                        <span style="padding: 10px">{{node.content.duration}}</span>\n\n                        <svg height="40" width="220px" style="display: block;">\n                            <g matTooltip="{{status.name}}"\n                               [attr.transform]="\'translate(\'+(16+i*30).toString()+\',\'+\'20)\'"\n                               *ngFor="let status of node.content.log_statuses; let i = index">\n\n                                <text fill="black" text-anchor="middle" vertical-align="middle"\n                                      font-size="10" y="3">{{status.count > 0 ? status.count : \'\'}}</text>\n\n                                <circle [attr.stroke-width]="status.count>0?2:1" (click)="status_click(node, status.name)"\n                                        [attr.stroke]="color_for_log_status(status.name, status.count)"\n                                        fill-opacity="0" r="12.5" style="cursor: pointer; opacity: 1;"></circle>\n                            </g>\n\n                        </svg>\n\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n\n                <app-log *ngIf="node.opened" [step]="node.content.id" [init_level]="node.content.init_level"></app-log>\n\n            </mat-expansion-panel>\n        </mat-accordion>\n\n    </mat-tree-node>\n</mat-tree>'},TBLF:function(t,e){t.exports='<div id="codeholder">\n\n</div>\n'},V9Pp:function(t,e){t.exports='<app-tasks [dag]="dag"></app-tasks>'},"Xy/L":function(t,e,n){"use strict";n.r(e);var o=n("mrSG"),a=n("CcnG"),i=n("OBdK"),r=n("J12g"),s=n("xMyE"),c=n("9Z1F"),p=n("24n0"),l=n("2G9v"),d=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.url=""+p.a.API_ENDPOINT,e}return o.c(e,t),e.prototype.get_config=function(t){var e=this;return this.http.post(this.url+"config",t).pipe(Object(s.a)(function(t){return e.log("fetched config")}),Object(c.a)(this.handleError("config",new l.c)))},e.prototype.get_code=function(t){var e=this;return this.http.post(this.url+"code",t).pipe(Object(s.a)(function(t){return e.log("fetched code")}),Object(c.a)(this.handleError("config",[])))},e.prototype.get_graph=function(t){var e=this;return this.http.post(this.url+"graph",t).pipe(Object(s.a)(function(t){return e.log("fetched graph")}),Object(c.a)(this.handleError("graph",new l.d)))},e=o.b([Object(a.D)({providedIn:"root"})],e)}(n("Bqtk").a),u=n("ZYCi"),h=n("OdHV"),m=n("9VKz"),g=function(){function t(t,e,n,o){this.service=t,this.route=e,this.message_service=n,this.resource_service=o,this.transformer=function(t,e){return{expandable:!!t.children&&t.children.length>0,name:t.name,level:e,content:t.content}},this.treeControl=new i.i(function(t){return t.level},function(t){return t.expandable}),this.treeFlattener=new r.b(this.transformer,function(t){return t.level},function(t){return t.expandable},function(t){return t.children}),this.dataSource=new r.a(this.treeControl,this.treeFlattener),this.hasChild=function(t,e){return e.expandable}}return t.prototype.ngOnInit=function(){var t=this;this.dag_id=parseInt(this.route.parent.snapshot.paramMap.get("id")),this.service.get_code(this.dag_id).subscribe(function(e){t.dataSource.data=e}),this.resource_service.load("prettify","prettify-yaml","prettify-css")},t.prototype.prettify_lang=function(t){switch(t){case"py":return"lang-py";case"yaml":case"yml":return"lang-yaml";case"json":return"lang-json";default:return""}},t.prototype.node_click=function(t){var e=document.createElement("pre");e.textContent=t.content;var n=-1!=t.name.indexOf(".")?t.name.split(".")[1].toLowerCase():"";e.className="prettyprint linenums "+this.prettify_lang(n);var o=document.getElementById("codeholder");o.innerHTML="",o.appendChild(e),window.PR.prettyPrint()},t=o.b([Object(a.n)({selector:"app-code",template:n("7yFK"),styles:[n("MPo4")]}),o.d("design:paramtypes",[d,u.a,h.a,m.a])],t)}(),f=function(){function t(t,e,n,o){this.message_service=t,this.route=e,this.service=n,this.resource_service=o}return t.prototype.ngOnInit=function(){var t=this;this.dag_id=parseInt(this.route.parent.snapshot.paramMap.get("id")),this.resource_service.load("prettify","prettify-yaml","prettify-css").then(function(){t.service.get_config(t.dag_id).subscribe(function(t){var e=document.createElement("pre");e.textContent=t.data,e.className="prettyprint linenums lang-yaml",document.getElementById("codeholder").appendChild(e),window.PR.prettyPrint()})})},t=o.b([Object(a.n)({selector:"app-config",template:n("TBLF"),styles:[n("p8w6")]}),o.d("design:paramtypes",[h.a,u.a,d,m.a])],t)}(),b=function(){function t(t,e,n,o,a){this.message_service=t,this.route=e,this.service=n,this.resource_service=o,this.router=a}return t.prototype.ngOnInit=function(){this.dag_id=parseInt(this.route.parent.snapshot.paramMap.get("id")),this.load_network()},t.prototype.load_network=function(){var t=this,e=this;this.resource_service.load("vis.min.js","vis.min.css").then(function(n){t.service.get_graph(t.dag_id).subscribe(function(t){t.nodes.forEach(function(t){return t.color=p.a.status_colors[t.status]}),t.edges.forEach(function(t){return t.color=p.a.status_colors[t.status]});var n=window.vis,o=new n.DataSet(t.nodes),a=new n.DataSet(t.edges),i=document.getElementById("mynetwork"),r={nodes:o,edges:a};new n.Network(i,r,{layout:{hierarchical:{direction:"LR",sortMethod:"directed"}},edges:{arrows:"to"}}).on("doubleClick",function(t){var n=t.nodes,a=o.get(n);e.router.navigate(["/task/"+a[0].id])})})}).catch(function(e){return t.message_service.add(e)})},t=o.b([Object(a.n)({selector:"app-graph",template:n("KkV2"),styles:[n("B6gx")]}),o.d("design:paramtypes",[h.a,u.a,d,m.a,u.b])],t)}(),y=function(){function t(){}return t.prototype.ngOnInit=function(){},t=o.b([Object(a.n)({selector:"app-dag-detail",template:n("8kgY"),styles:[n("s0bQ")]})],t)}(),v=function(){function t(t){this.route=t}return t.prototype.ngOnInit=function(){this.dag=parseInt(this.route.snapshot.paramMap.get("id"))},t=o.b([Object(a.n)({selector:"app-tasks-host",template:n("V9Pp"),styles:[n("fkOB")]}),o.d("design:paramtypes",[u.a])],t)}(),I=[{path:"",component:y,children:[{path:"code",component:g},{path:"config",component:f},{path:"graph",component:b},{path:"",component:v}]}],L=function(){function t(){}return t=o.b([Object(a.L)({imports:[u.c.forChild(I)],exports:[u.c]})],t)}(),k=n("d2mR");n.d(e,"DagDetailModule",function(){return w});var w=function(){function t(){}return t=o.b([Object(a.L)({imports:[L,k.a],declarations:[g,f,b,y,v]})],t)}()},aTOI:function(t,e){t.exports='<nav>\n  <a routerLink="./" routerLinkActive="active"  [routerLinkActiveOptions]="{ exact: true }">Reports</a>\n  <a routerLink="./step" routerLinkActive="active">Steps</a>\n  <a routerLink="./log" routerLinkActive="active">Logs</a>\n</nav>\n\n<router-outlet></router-outlet>'},c4K0:function(t,e){t.exports="\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL3Rhc2svdGFzay1kZXRhaWwvc3RlcC9zdGVwLmNvbXBvbmVudC5jc3MifQ== */"},fkOB:function(t,e){t.exports="\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2RhZy9kYWctZGV0YWlsL3Rhc2tzL3Rhc2tzLmNvbXBvbmVudC5jc3MifQ== */"},p8w6:function(t,e){t.exports="\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2RhZy9kYWctZGV0YWlsL2NvbmZpZy9jb25maWcuY29tcG9uZW50LmNzcyJ9 */"},s0bQ:function(t,e){t.exports="\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2RhZy9kYWctZGV0YWlsL2RhZy1kZXRhaWwvZGFnLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */"}}]);
//# sourceMappingURL=common.js.map